easyblock = 'CMakeMake'

name = 'Yade'
version = '1.20.0'

homepage = 'www.yade-dem.org'
description = """ Yade is an extensible open-source framework for discrete numerical models, 
 focused on Discrete Element Method. The computation parts are written in c++ using flexible object model, 
 allowing independent implementation of new alogrithms and interfaces. 
 Python is used for rapid and concise scene construction, simulation control, postprocessing and debugging. """

toolchain = {'name': 'foss', 'version': '2016a'}

source_urls = ['https://launchpad.net/yade/trunk/yade-1.00.0/+download/']
sources = [SOURCELOWER_TAR_GZ]

pyver = '2.7.11'
versionsuffix = '-Python-%s' % pyver

dependencies = [
    ('git', '2.8.0'),
    ('freeglut', '3.0.0'),
    ('loki', '-------'),
    ('Boost', '1.60.0'),
    ('fakeroot', '-------'),
    ('dpkg', '-------'),
    ('IPython', '3.2.3', versionsuffix),
    ('matplotlib', '1.5.1'),
    ('SQLite', '3.9.2'),
    ('numpy', '1.10.4', versionsuffix)
    ('TK', '8.6.4', 'no-X11'),
    ('gnuplot', '5.0.3'),
    ('gts', '0.7.6'),
    ('Graphviz', '2.38'),
    ('ScientificPython', '2.9.4', versionsuffix),
    ('Eigen', '3.2.7'),
    ('Qt', '4.8.7'),			
    ('gtk+', '2.24.28'),
    ('libqglviewer-dev', '-------'),
    ('libjs-jquery', '---------'),
    ('Sphinx', '1.3.3'),
    ('bibtexparser', '0.6.0'),
    ('libXmu', '1.1.2'),
    ('libXi', '1.7.6'),
    ('help2man', '--------'),
    ('bzip2', '1.0.6'),
    ('ziblg-dev', '---------------'),
    ('GDB', '7.10.1',versionsuffix),
    # optional
    ('VTK', '6.3.0'),			
    ('CGAL', '4.7'),
    ('SuiteSparse', '4.5.1'),
    ('OpenBLAS', '0.2.15'),
    ('METIS', '5.1.0'),
]

builddependencies = [('CMake', '3.2.3')]

separate_build_dir = True

# In case you want disable some Yade features
# configopts = '-OPTION_1 = OFF -OPTION_2 = OFF ...'   

# options available,
# ENABLE_GUI: enable GUI option (ON by default)
# ENABLE_CGAL: enable CGAL option (ON by default)
# ENABLE_VTK: enable VTK-export option (ON by default)
# ENABLE_OPENMP: enable OpenMP-parallelizing option (ON by default)
# ENABLE_GTS: enable GTS-option (ON by default)
# ENABLE_GL2PS: enable GL2PS-option (ON by default)
# ENABLE_LINSOLV: enable LINSOLV-option (ON by default)
# ENABLE_PFVFLOW: enable PFVFLOW-option, FlowEngine (ON by default)
# ENABLE_LBMFLOW: enable LBMFLOW-option, LBM_ENGINE (ON by default)
# ENABLE_SPH: enable SPH-option, Smoothed Particle Hydrodynamics (OFF by default)
# ENABLE_LIQMIGRATION: enable LIQMIGRATION-option, see [Mani2013] for details (OFF by default)
# ENABLE_MASK_ARBITRARY: enable MASK_ARBITRARY option (OFF by default)
# ENABLE_PROFILING: enable profiling, e.g., shows some more metrics, which can define bottlenecks of the code (OFF by default)
# runtimePREFIX: used for packaging, when install directory is not the same as runtime directory (/usr/local by default)
# CHUNKSIZE: specifiy the chunk size if you want several sources to be compiled at once. Increases compilation speed but RAM-consumption during compilation as well (1 by default)
# VECTORIZE: enables vectorization and alignment in Eigen3 library, experimental (OFF by default)
# USE_QT5: use QT5 for GUI, experimental (OFF by default)

sanity_check_paths = {
    'files': ['bin/%s-%s' %(namelower, version), 'bin/%s-%s-batch' %(namelower, version)],
    'dirs': ['lib/x86_64-linux-gnu']
}

moduleclass = 'devel'
