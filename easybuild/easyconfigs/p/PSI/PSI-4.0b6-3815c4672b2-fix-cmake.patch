# fixes the order in which libs get linked in the final executable
# if the order is wrong, you will get linking errors
diff -ur psi4public-3815c4672b20557818d653694ff2cb5c78819708.org/src/lib/libPsiUtil/CMakeLists.txt psi4public-3815c4672b20557818d653694ff2cb5c78819708/src/lib/libPsiUtil/CMakeLists.txt
--- psi4public-3815c4672b20557818d653694ff2cb5c78819708.org/src/lib/libPsiUtil/CMakeLists.txt	2015-02-18 19:36:31.000000000 +0100
+++ psi4public-3815c4672b20557818d653694ff2cb5c78819708/src/lib/libPsiUtil/CMakeLists.txt	2015-02-26 10:36:56.000000000 +0100
@@ -1,21 +1,41 @@
-set(SRC ProgressBar.h
-        PsiMap.h
-        PsiRdmNumGen.h
-        PythonFxn.h
-        Timer.h
-        Units.h
-        AtomicData.h
-        Implementations/UnitsGuts.hh
-        Implementations/PrefixConverter.cc
-        Implementations/Timer.cc
-        Implementations/BaseUnitConverter.cc
-        Implementations/PythonFxnGuts.cc
-        Implementations/AtomicData.cc
-        Implementations/ProgressBar.cc
-)
-add_library(PsiUtil ${SRC})
+set(headers_list "")
+# List of headers
+list(APPEND ProgressBar.h PsiMap.h PsiRdmNumGen.h PythonFxn.h Timer.h Units.h AtomicData.h Implementations/UnitsGuts.hh )
+
+# If you want to remove some headers specify them explictly here
+if(DEVELOPMENT_CODE)
+   list(REMOVE_ITEM headers_list "")
+else()
+   list(REMOVE_ITEM headers_list "")
+endif()
+# Sort alphabetically
+list(SORT headers_list)
+
+set(sources_list "")
+# List of sources
+list(APPEND sources_list Implementations/PrefixConverter.cc Implementations/Timer.cc Implementations/BaseUnitConverter.cc Implementations/PythonFxnGuts.cc Implementations/AtomicData.cc Implementations/ProgressBar.cc )
+
+# If you want to remove some sources specify them explictly here
+if(DEVELOPMENT_CODE)
+   list(REMOVE_ITEM sources_list "")
+else()
+   list(REMOVE_ITEM sources_list "")
+endif()
+
+# Write list of files to be passed to cloc for counting lines of code.
+# Only files that are actually compiled are counted.
+set(to_count "${sources_list}" "${headers_list}")
+write_to_cloc_list("${to_count}")
+
+# Build static library
+add_library(PsiUtil STATIC ${sources_list})
+# Specify dependencies for the library (if any)
 add_dependencies(PsiUtil parallel2)
-include_directories(libparallel2)
+set(libs_to_merge PsiUtil ${libs_to_merge} PARENT_SCOPE)
 if(BUILD_CUSTOM_BOOST)
    add_dependencies(PsiUtil custom_boost)
 endif()
+install(TARGETS PsiUtil ARCHIVE DESTINATION lib)
+
+# Sets install directory for all the headers in the list
+install_list_FILES("${headers_list}" include/libPsiUtil)
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -203,8 +203,12 @@ if(NOT LIBINT_OPT_AM)
    set(LIBINT_OPT_AM 5)
 endif()
 
+get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)
+set(include_dir_externals ${dirs})
+
 # Psi4-specific includes and libraries
 set(CMAKE_INCLUDE_CURRENT_DIR ON)
+
 include_directories(
     ${PROJECT_BINARY_DIR}/include 
     ${PROJECT_SOURCE_DIR}/include
@@ -225,7 +229,8 @@ set(PSILIB mints_wrapper dfmp2 dfocc scf ccenergy ccsort psimrcc transqt2
            cchbar cclambda ccdensity transqt ccresponse detci occ mrcc fnocc
            cceom adc thermo functional disp thce 3index deriv_wrapper optking
            findif mints trans dpd chkpt iwl psio qt ciomr options moinfo psi4util
-           stable deriv scfgrad int diis plugin parallel parallel2 babel frag efp_solver efp)
+           stable deriv scfgrad int diis plugin parallel parallel2 babel frag efp_solver efp
+           parallel parallel2 PsiUtil)
 
 # PCMSolver
 if(ENABLE_PCMSOLVER)
@@ -303,9 +308,11 @@ add_subdirectory(lib)
 # Handle creation of Makefile for plugins
 get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)
 get_property(defs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY COMPILE_DEFINITIONS)
-foreach(dir ${dirs})
+foreach(dir ${include_dir_externals})
     set(PLUGIN_INCLUDE_DIRECTORIES "-I${dir} ${PLUGIN_INCLUDE_DIRECTORIES}")
 endforeach()
+set(PLUGIN_INCLUDE_DIRECTORIES "-I$ENV{PSI_SRC_INSTALL_DIR}/include -I$ENV{PSI_SRC_INSTALL_DIR}/src/lib/ -I$ENV{PSI_OBJ_INSTALL_DIR}/include -I$ENV{PSI_OBJ_INSTALL_DIR}/src/lib/ ${PLUGIN_INCLUDE_DIRECTORIES}")
+
 foreach(def ${defs})
     set(PLUGIN_DEFINES "-D${def} ${PLUGIN_DEFINES}")
 endforeach()
diff --git a/include/psiconfig.h.cmake.in b/include/psiconfig.h.cmake.in
--- a/include/psiconfig.h.cmake.in
+++ b/include/psiconfig.h.cmake.in
@@ -20,7 +20,7 @@
 #define PLUGIN_DEFINES "@PLUGIN_DEFINES@"
 #define PLUGIN_FLAGS "@CXX_FLAGS_PLUGIN@"
 #define PLUGIN_INCLUDES "@PLUGIN_INCLUDE_DIRECTORIES@"
-#define PLUGIN_OBJDIR "@PROJECT_BINARY_DIR@"
+#define PLUGIN_OBJDIR "@CMAKE_INSTALL_PREFIX@/obj"
 
 /* The PSI4 Datadir */
 #define INSTALLEDPSIDATADIR "@CMAKE_INSTALL_PREFIX@/share/psi"
diff -ur psi4public-3815c4672b20557818d653694ff2cb5c78819708.orig/src/bin/psi4/gitversion.py.in psi4public-3815c4672b20557818d653694ff2cb5c78819708/src/bin/psi4/gitversion.py.in
--- psi4public-3815c4672b20557818d653694ff2cb5c78819708.orig/src/bin/psi4/gitversion.py.in      2015-02-18 19:36:31.000000000 +0100
+++ psi4public-3815c4672b20557818d653694ff2cb5c78819708/src/bin/psi4/gitversion.py.in   2015-02-26 22:27:18.000000000 +0100
@@ -47,4 +47,6 @@
 except:
     branch = "detached?"
 
+version = "3815c4672b2055"
+branch = "master"
 write_version(version, branch)
