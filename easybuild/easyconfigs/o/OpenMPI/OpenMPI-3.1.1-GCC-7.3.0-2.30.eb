easyblock = 'ConfigureMake'

name = 'OpenMPI'
version = '3.1.1'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'GCC', 'version': '7.3.0-2.30'}

source_urls = ['http://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_GZ]
checksums = ['846bb7ed2aa0c96fc0594423e7b21904ee4f160dcfd62b8a0d1274256fbf25ce']

dependencies = [
    ('zlib', '1.2.11'),
    ('hwloc', '1.11.10')
]

configopts = '--enable-shared '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=$EBROOTHWLOC '  # hwloc support

modextravars = {
    "OPAL_PREFIX": '%(installdir)s',
    "PMIX_INSTALL_PREFIX": '%(installdir)s',
    "OMPI_HOME": '%(installdir)s',
    "MPI_HOME": '%(installdir)s',
    "OSHMEM_HOME": '%(installdir)s',
    "SHMEM_HOME": '%(installdir)s',
}

import os
# Are we on an InfiniBand machine?
ib = os.environ.get('OMPI_MCA_btl_openib_if_include')
if ib:
    # Configure Slurm options
    configopts += '--with-pmi ' # srun support for mpi
    configopts += '--with-slurm ' # we want slurm suppport

    # Configure InfiniBand options
    configopts += "--with-verbs "
    osdependencies = [
        ('libibverbs-dev', 'libibverbs-devel'),
        ('libpciaccess-devel', 'libpciaccess-dev'),
        ('libudev-devel', 'systemd-devel', 'libsystemd-dev'),
        ('rdma-core-devel', 'librdmacm-devel'),
    ]
    configopts += '--without-knem --without-mxm --without-hcoll --without-ucx '
else:
    print "Please make sure you're building on a VM that doesn't have InfiniBand or gpfs etc."

libs = ["mpi_mpifh", "mpi", "ompitrace", "open-pal", "open-rte"]
sanity_check_paths = {
    'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
             ["lib/lib%s.%s" % (libfile, SHLIB_EXT) for libfile in libs] +
             ["include/%s.h" % x for x in ["mpi-ext", "mpif-config", "mpif", "mpi", "mpi_portable_platform"]],
    'dirs': [],
}

moduleclass = 'mpi'
