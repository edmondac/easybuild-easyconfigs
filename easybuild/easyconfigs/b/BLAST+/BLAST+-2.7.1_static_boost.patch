diff -Nru ncbi-blast-2.7.1+-src.orig/c++/src/build-system/configure.ac ncbi-blast-2.7.1+-src/c++/src/build-system/configure.ac
--- ncbi-blast-2.7.1+-src.orig/c++/src/build-system/configure.ac	2017-10-18 17:21:39.000000000 +0200
+++ ncbi-blast-2.7.1+-src/c++/src/build-system/configure.ac	2018-03-16 14:43:59.000000000 +0100
@@ -5540,7 +5540,7 @@
 
    AC_CACHE_CHECK([for Boost.Regex$in_path], ncbi_cv_lib_boost_regex,
       CPPFLAGS="$BOOST_INCLUDE $orig_CPPFLAGS"
-      LIBS="$BOOST_LIBPATH $BOOST_REGEX_LIBS $RT_LIBS $orig_LIBS"
+      LIBS="$BOOST_LIBPATH $BOOST_REGEX_STATIC_LIBS $RT_LIBS $orig_LIBS"
       [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[#include <boost/regex.hpp>]],
               [[throw boost::regex_error(boost::regex_constants::error_stack);]])],
@@ -5577,7 +5577,7 @@
 
    AC_CACHE_CHECK([for Boost.System$in_path], ncbi_cv_lib_boost_system,
       CPPFLAGS="$BOOST_INCLUDE $orig_CPPFLAGS"
-      LIBS="$BOOST_LIBPATH $BOOST_SYSTEM_LIBS $RT_LIBS $orig_LIBS"
+      LIBS="$BOOST_LIBPATH $BOOST_SYSTEM_STATIC_LIBS $RT_LIBS $orig_LIBS"
       [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[#include <boost/system/error_code.hpp>]],
               [[const char * s = boost::system::system_category().name();]])],
@@ -5592,12 +5592,12 @@
    else
        boost_fs_static_lib=$boost_fs_lib
    fi
-   BOOST_FILESYSTEM_LIBS="$boost_fs_lib $BOOST_SYSTEM_LIBS"
+   BOOST_FILESYSTEM_LIBS="$boost_fs_static_lib $BOOST_SYSTEM_STATIC_LIBS"
    BOOST_FILESYSTEM_STATIC_LIBS="$boost_fs_static_lib $BOOST_SYSTEM_STATIC_LIBS"
 
    AC_CACHE_CHECK([for Boost.Filesystem$in_path], ncbi_cv_lib_boost_filesystem,
       CPPFLAGS="$BOOST_INCLUDE $orig_CPPFLAGS"
-      LIBS="$BOOST_LIBPATH $BOOST_FILESYSTEM_LIBS $RT_LIBS $orig_LIBS"
+      LIBS="$BOOST_LIBPATH $BOOST_FILESYSTEM_STATIC_LIBS $RT_LIBS $orig_LIBS"
       [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[#include <boost/filesystem.hpp>]],
               [[return boost::filesystem::portable_name("foo");]])],
@@ -5613,7 +5613,7 @@
 
    AC_CACHE_CHECK([for Boost.Iostreams$in_path], ncbi_cv_lib_boost_iostreams,
       CPPFLAGS="$BOOST_INCLUDE $orig_CPPFLAGS"
-      LIBS="$BOOST_LIBPATH $BOOST_IOSTREAMS_LIBS $Z_LIBS $BZ2_LIBS $orig_LIBS"
+      LIBS="$BOOST_LIBPATH $BOOST_IOSTREAMS_STATIC_LIBS $Z_LIBS $BZ2_LIBS $orig_LIBS"
       [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[#include <boost/iostreams/device/file_descriptor.hpp>]],
               [[boost::iostreams::file_descriptor fd;]])],
@@ -5630,7 +5630,7 @@
    AC_CACHE_CHECK([for Boost.Program-Options$in_path],
       ncbi_cv_lib_boost_program_options,
       CPPFLAGS="$BOOST_INCLUDE $orig_CPPFLAGS"
-      LIBS="$BOOST_LIBPATH $BOOST_PROGRAM_OPTIONS_LIBS $orig_LIBS"
+      LIBS="$BOOST_LIBPATH $BOOST_PROGRAM_OPTIONS_STATIC_LIBS $orig_LIBS"
       [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[#include <boost/program_options.hpp>]],
               [[boost::program_options::option_description od;]])],
@@ -5672,7 +5672,7 @@
       for mode in included external; do
         if test "$mode" = external; then
           CPPFLAGS="-DNCBI_BOOST_NOT_INCLUDED $CPPFLAGS"
-          LIBS="$BOOST_LIBPATH $BOOST_TEST_UTF_LIBS $LIBS"
+          LIBS="$BOOST_LIBPATH $BOOST_TEST_UTF_STATIC_LIBS $LIBS"
         fi
         [AC_LINK_IFELSE(
            [AC_LANG_SOURCE(
@@ -5698,7 +5698,7 @@
         ''                 ) ncbi_cv_lib_boost_test=no            ;;
       esac])
 
-   BOOST_THREAD_LIBS="-lboost_thread${BOOST_TAG} $BOOST_SYSTEM_LIBS"
+   BOOST_THREAD_LIBS="-lboost_thread${BOOST_TAG} $BOOST_SYSTEM_STATIC_LIBS"
    if test -f "$BOOST_LIBPATH_/libboost_thread${BOOST_TAG}-static.a"; then
        BOOST_THREAD_STATIC_LIBS="-lboost_thread${BOOST_TAG}-static $BOOST_SYSTEM_STATIC_LIBS"
    else
@@ -5707,7 +5707,7 @@
 
    AC_CACHE_CHECK([for Boost.Thread$in_path], ncbi_cv_lib_boost_thread,
       CPPFLAGS="$BOOST_INCLUDE $orig_CPPFLAGS"
-      LIBS="$BOOST_LIBPATH $BOOST_THREAD_LIBS $RT_LIBS $orig_LIBS"
+      LIBS="$BOOST_LIBPATH $BOOST_THREAD_STATIC_LIBS $RT_LIBS $orig_LIBS"
       [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[#include <boost/thread.hpp>]],
               [[boost::mutex m; boost::mutex::scoped_lock l(m);]])],
@@ -7447,12 +7447,12 @@
 NCBI_CHECK_THIRD_PARTY_LIB_EX(avro, AVRO, avrocpp,
    [AC_LANG_PROGRAM([#include <avro/Node.hh>],
       [avro::Name name("foo");])],
-   [$BOOST_LIBPATH $BOOST_FILESYSTEM_LIBS $BOOST_SYSTEM_LIBS $BOOST_PROGRAM_OPTIONS_LIBS $BOOST_IOSTREAMS_LIBS $RT_LIBS $Z_LIBS $BZ2_LIBS],
+   [$BOOST_LIBPATH $BOOST_FILESYSTEM_STATIC_LIBS $BOOST_SYSTEM_STATIC_LIBS $BOOST_PROGRAM_OPTIONS_STATIC_LIBS $BOOST_IOSTREAMS_STATIC_LIBS $RT_LIBS $Z_LIBS $BZ2_LIBS],
    [],
    [$BOOST_INCLUDE])
 if test -n "$AVRO_LIBS"; then
    if test -f "$AVRO_PATH/lib/libavrocpp_s.a"; then
-      AVRO_STATIC_LIBS="$AVRO_LIBPATH -lavrocpp_s $BOOST_LIBPATH $BOOST_FILESYSTEM_LIBS $BOOST_SYSTEM_LIBS $BOOST_PROGRAM_OPTIONS_LIBS $BOOST_IOSTREAMS_LIBS $RT_LIBS $Z_LIBS $BZ2_LIBS"
+      AVRO_STATIC_LIBS="$AVRO_LIBPATH -lavrocpp_s $BOOST_LIBPATH $BOOST_FILESYSTEM_STATIC_LIBS $BOOST_SYSTEM_STATIC_LIBS $BOOST_PROGRAM_OPTIONS_STATIC_LIBS $BOOST_IOSTREAMS_STATIC_LIBS $RT_LIBS $Z_LIBS $BZ2_LIBS"
    else
       AVRO_STATIC_LIBS=$AVRO_LIBS
    fi
@@ -7516,7 +7516,7 @@
       [std::vector<mongo::HostAndPort> v;
        mongo::DBClientReplicaSet client("foo", v);
        client.connect();])],
-   [$BOOST_LIBPATH $boost_fs_lib $BOOST_REGEX_LIBS $BOOST_THREAD_LIBS $OPENSSL_LIBS $SASL2_LIBS], [],
+   [$BOOST_LIBPATH $boost_fs_static_lib $BOOST_REGEX_LIBS $BOOST_THREAD_LIBS $OPENSSL_LIBS $SASL2_LIBS], [],
    [$BOOST_INCLUDE])
 # MongoDB's own library is normally static, but its supporting Boost
 # libraries might not be by default.
