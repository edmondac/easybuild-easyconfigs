# This easyconfig was created by the BEAR Software team at the University of Birmingham.
easyblock = 'ConfigureMake'

name = 'MG-CFD'
local_commit = 'ab24d85'
version = 'OP2-%s' % local_commit

homepage = "https://github.com/warwick-hpsc/MG-CFD-app-OP2"
description = """OP2 port of MG-CFD."""

toolchain = {'name': 'foss', 'version': '2020b'}

source_urls = ['https://github.com/warwick-hpsc/MG-CFD-app-OP2/archive']
sources = [
    # MG-CFD-OP2
    {
        'filename': '%s.tar.gz' % local_commit,
        'extract_cmd': 'tar --strip-components=1 -xf %s'
    },
    # Input files
    {
        'source_urls': ['https://github.com/warwick-hpsc/MG-CFD-app-plain/releases/download/v1.0.0-rc1'],
        'filename': 'm6wing.tar.gz',
        'extract_cmd': 'mkdir inputs && tar -C inputs -xf %s'
    },
    {
        'source_urls': ['https://github.com/warwick-hpsc/MG-CFD-app-plain/releases/download/v1.0.0-rc1'],
        'filename': 'fvcorr.domn.097K.tar.gz',
        'extract_cmd': 'tar -C inputs -xf %s'   
    },
]
patches = [
    'MG-CFD-OP2_no_cuda.patch',
    'MG-CFD-OP2_restrict_keyword.patch',
    'MG-CFD-OP2_scripts.patch'
]
checksums = [
    '156b2bb33fd98a4d12dffa0d59c5219f0dbedc4c357416f182ee850d3d5dc3ef',  # ab24d85.tar.gz
    '2867f1b2fdb7971939b32c24b6d8cab3a4af45498c31b9a7db1d4801d55620b4',  # m6wing.tar.gz
    '0c2a8f90c1aa1f5a25216b5577795935f178b33c02bc778fa1e3fbf39fdb9eae',  # fvcorr.domn.097K.tar.gz
    'b2e094d357c38eded0deca86d8a09de96a22af7ad46b511f0dcaf098c30a403c',  # MG-CFD-OP2_no_cuda.patch
    'e0ccfc35773c575a7aa3ced37e02ec5554feac167d00951961f00557ec8af326',  # MG-CFD-OP2_restrict_keyword.patch
    '95be6324f094652862d36ad4865cce8d32d445cee98eea295c0ec754ff80e7e8',  # MG-CFD-OP2_scripts.patch
]

dependencies = [
    ('HDF5', '1.10.7'),
    ('ParMETIS', '4.0.3'),
    ('SCOTCH', '6.1.0', '-MG-CFD'),  # version with -DSCOTCH_PTHREAD removed from CFLAGS
    ('OP2', '93c1b9c'),
    ('PAPI', '6.0.0'),
    ('Python', '3.8.6'),
    ('SciPy-bundle', '2020.11'),
    ('matplotlib', '3.3.3'),
]

skipsteps = ['configure']

buildininstalldir = True

prebuildopts = 'export HDF5_INSTALL_PATH=$EBROOTHDF5 && '
prebuildopts += 'export PARMETIS_INSTALL_PATH=$EBROOTPARMETIS && '
prebuildopts += 'export PTSCOTCH_INSTALL_PATH=$EBROOTSCOTCH && '
prebuildopts += 'export OP2_INSTALL_PATH=$EBROOTOP2/op2 && '
prebuildopts += 'export MPI_INSTALL_PATH=$EBROOTOPENMPI && '
prebuildopts += 'export PAPI=ON && '
prebuildopts += 'export OP2_COMPILER=gnu &&'

build_cmd = 'make seq openmp mpi mpi_vec mpi_openmp openmp4'

install_cmd = 'chmod a+x run-scripts/*.py'

fix_python_shebang_for = ['run-scripts/*.py']

modextrapaths = {
    'PATH': 'run-scripts',
}

sanity_check_paths = {
    'files': ['bin/%s' % x for x in ['mgcfd_mpi', 'mgcfd_seq', 'mgcfd_openmp', 'mgcfd_openmp4', 'mgcfd_mpi_openmp']],
    'dirs': ['run-inputs', 'run-scripts', 'run-templates', 'inputs/m6wing', 'inputs/fvcorr.domn.097K'],
}

sanity_check_commands = ['mgcfd_seq --help || true']

moduleclass = 'phys'
