name: easyconfigs unit tests
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: install OS & Python packages
      run: |
        docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
        docker run docker.pkg.github.com/bear-rsg/docker/easybuild-easyconfigs:latest
    - name: install EasyBuild framework
      run: |
          cd $HOME
          # first determine which branch of easybuild-framework repo to install
          BRANCH=develop
          if [ "x$GITHUB_BASE_REF" = 'xmaster' ]; then BRANCH=master; fi
          if [ "x$GITHUB_BASE_REF" = 'x4.x' ]; then BRANCH=4.x; fi
          echo "Using easybuild-framework branch $BRANCH (\$GITHUB_BASE_REF $GITHUB_BASE_REF)"

          git clone -b $BRANCH --depth 10 --single-branch https://github.com/easybuilders/easybuild-framework.git
          cd easybuild-framework; git log -n 1; cd -
          pip install $PWD/easybuild-framework

          git clone -b $BRANCH --depth 10 --single-branch https://github.com/hpcugent/easybuild-easyblocks.git
          cd easybuild-easyblocks; git log -n 1; cd -
          pip install $PWD/easybuild-easyblocks

    - name: install modules tool
      run: |
          cd $HOME
          # use install_eb_dep.sh script provided with easybuild-framework
          export INSTALL_DEP=$(which install_eb_dep.sh)
          echo "Found install_eb_dep.sh script: $INSTALL_DEP"

          # install modules tool
          source $INSTALL_DEP Lmod-7.8.22 $HOME

          # changes in environment are not passed to other steps, so need to create files...
          echo $MOD_INIT > mod_init
          echo $PATH > path
          if [ ! -z $MODULESHOME ]; then echo $MODULESHOME > moduleshome; fi

    - name: run test suite
      env:
        EB_VERBOSE: 1
        EASYBUILD_MODULE_SYNTAX: ${{matrix.module_syntax}}
      run: |
          # pull in target so we can diff against it to obtain list of touched files
          if [ "x$GITHUB_BASE_REF" != 'xmaster' ]; then git fetch -v origin ${GITHUB_BASE_REF}:${GITHUB_BASE_REF}; fi

          # initialize environment for modules tool
          if [ -f $HOME/moduleshome ]; then export MODULESHOME=$(cat $HOME/moduleshome); fi
          source $(cat $HOME/mod_init); type module

          # make sure 'eb' is available via $PATH, and that $PYTHONPATH is set (some tests expect that);
          # also pick up changes to $PATH set by sourcing $MOD_INIT
          WORKDIR=$GITHUB_WORKSPACE/easybuild-easyconfigs
          export PATH=$WORKDIR/test/bin:$(cat $HOME/path)
          export PYTHONPATH=$WORKDIR

          # tell EasyBuild which modules tool is available
          export EASYBUILD_MODULES_TOOL=Lmod

          eb --version
          eb --show-config
          # gather some useful info on test system
          eb --show-system-info

          # run test suite
          python -O -m test.easyconfigs.suite

          unset PYTHONPATH
